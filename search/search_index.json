{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DALI Types","text":"<p>This is the VO-DML model definition of data types defined by DALI</p>"},{"location":"schema/","title":"Schema","text":"<p>The schema for the model instance serializations can be found below</p> <ul> <li>XML</li> <li>JSON</li> <li>JSON</li> </ul>"},{"location":"generated/DALITypesDM-v1.vo-dml/","title":"dali","text":"<p>version 0.1 2025-02-13</p>"},{"location":"generated/DALITypesDM-v1.vo-dml/#introduction","title":"Introduction","text":"<p>a general purpose collection of data types</p>"},{"location":"generated/DALITypesDM-v1.vo-dml/#authors","title":"Authors","text":"<p>Patrick Dowler, Canadian Astronomy Data Centre</p>"},{"location":"generated/DALITypesDM-v1.vo-dml/#overview-diagram","title":"Overview diagram","text":"<p>The whole model is represented in a model diagram below</p> GVmapdali data modeldali:uuid &lt;&lt;primitive type&gt;&gt; uuid dali:double &lt;&lt;primitive type&gt;&gt; double dali:int32 &lt;&lt;primitive type&gt;&gt; int32 dali:int64 &lt;&lt;primitive type&gt;&gt; int64 dali:Point &lt;&lt;datatype&gt;&gt; Point +cval1 : dali:double +cval2 : dali:double dali:Shape &lt;&lt;datatype&gt;&gt; Shape dali:Circle &lt;&lt;datatype&gt;&gt; Circle +center : dali:Point +radius : dali:double dali:Circle-&gt;dali:Shapedali:MultiShape &lt;&lt;datatype&gt;&gt; MultiShape +shapes : dali:Shape dali:Polygon &lt;&lt;datatype&gt;&gt; Polygon +points : dali:Point dali:Polygon-&gt;dali:Shapedali:Interval &lt;&lt;datatype&gt;&gt; Interval +lower : dali:double +upper : dali:double"},{"location":"generated/DALITypesDM-v1.vo-dml/#primitives","title":"Primitives","text":"<ul> <li>double</li> <li>int32</li> <li>int64</li> <li>uuid</li> </ul>"},{"location":"generated/DALITypesDM-v1.vo-dml/#datatypes","title":"DataTypes","text":"<ul> <li>Circle</li> <li>Interval</li> <li>MultiShape</li> <li>Point</li> <li>Polygon</li> <li>Shape</li> </ul>"},{"location":"generated/DALITypesDM-v1.vo-dml/#imports","title":"Imports","text":"<ul> <li>ivoa</li> </ul>"},{"location":"generated/IVOA-v1.0.vo-dml/","title":"ivoa","text":"<p>version 1.0 2018-05-05</p>"},{"location":"generated/IVOA-v1.0.vo-dml/#introduction","title":"Introduction","text":"<p>This is the main reference data model containing primitive types used in other data models.</p>"},{"location":"generated/IVOA-v1.0.vo-dml/#authors","title":"Authors","text":""},{"location":"generated/IVOA-v1.0.vo-dml/#overview-diagram","title":"Overview diagram","text":"<p>The whole model is represented in a model diagram below</p> GVmapivoa data modelivoa:Unit &lt;&lt;primitive type&gt;&gt; Unit ivoa:string &lt;&lt;primitive type&gt;&gt; string ivoa:Unit-&gt;ivoa:stringivoa:anyURI &lt;&lt;primitive type&gt;&gt; anyURI ivoa:anyURI-&gt;ivoa:stringivoa:boolean &lt;&lt;primitive type&gt;&gt; boolean ivoa:complex &lt;&lt;primitive type&gt;&gt; complex ivoa:datetime &lt;&lt;primitive type&gt;&gt; datetime ivoa:integer &lt;&lt;primitive type&gt;&gt; integer ivoa:nonnegativeInteger &lt;&lt;primitive type&gt;&gt; nonnegativeInteger ivoa:rational &lt;&lt;primitive type&gt;&gt; rational ivoa:real &lt;&lt;primitive type&gt;&gt; real ivoa:IntegerQuantity &lt;&lt;datatype&gt;&gt; IntegerQuantity +value : ivoa:integer ivoa:Quantity &lt;&lt;datatype&gt;&gt; Quantity +unit : ivoa:Unit ivoa:IntegerQuantity-&gt;ivoa:Quantityivoa:RealQuantity &lt;&lt;datatype&gt;&gt; RealQuantity +value : ivoa:real ivoa:RealQuantity-&gt;ivoa:Quantity"},{"location":"generated/IVOA-v1.0.vo-dml/#primitives","title":"Primitives","text":"<ul> <li>Unit</li> <li>anyURI</li> <li>boolean</li> <li>complex</li> <li>datetime</li> <li>integer</li> <li>nonnegativeInteger</li> <li>rational</li> <li>real</li> <li>string</li> </ul>"},{"location":"generated/IVOA-v1.0.vo-dml/#datatypes","title":"DataTypes","text":"<ul> <li>IntegerQuantity</li> <li>Quantity</li> <li>RealQuantity</li> </ul>"},{"location":"generated/dali/Circle/","title":"dataType Circle","text":"<p>extends Shape</p> <p>a circular region on the sky</p> <p>\u00abdataType\u00bbCircledali:Point centerdali:double radius\u00abdataType\u00bbShape</p>"},{"location":"generated/dali/Circle/#members","title":"Members","text":"name type mult description center Point radius double"},{"location":"generated/dali/Interval/","title":"dataType Interval","text":"<p>a set of numeric values defined by a lower and upper bound (bounds included: [a,b])</p> <p>\u00abdataType\u00bbIntervaldali:double lowerdali:double upper</p>"},{"location":"generated/dali/Interval/#members","title":"Members","text":"name type mult description lower double upper double"},{"location":"generated/dali/MultiShape/","title":"dataType MultiShape","text":"<p>multiple simple shapes describing regions as a single value</p> <p>\u00abdataType\u00bbMultiShapedali:Shape shapes</p>"},{"location":"generated/dali/MultiShape/#members","title":"Members","text":"name type mult description shapes Shape 1 or more"},{"location":"generated/dali/Point/","title":"dataType Point","text":"<p>location on the sky</p> <p>\u00abdataType\u00bbPointdali:double cval1dali:double cval2</p>"},{"location":"generated/dali/Point/#members","title":"Members","text":"name type mult description cval1 double cval2 double"},{"location":"generated/dali/Polygon/","title":"dataType Polygon","text":"<p>extends Shape</p> <p>a simple polygon region on the sky defined a sequence of points connected by great-circle segments</p> <p>\u00abdataType\u00bbPolygondali:Point points\u00abdataType\u00bbShape</p>"},{"location":"generated/dali/Polygon/#members","title":"Members","text":"name type mult description points Point [3..3]"},{"location":"generated/dali/Shape/","title":"abstract dataType Shape","text":"<p>base type of all shapes</p> <p>\u00abdataType\u00bbShape\u00abdataType\u00bbCircle\u00abdataType\u00bbPolygon</p>"},{"location":"generated/dali/Shape/#members","title":"Members","text":"name type mult description"},{"location":"generated/dali/double/","title":"primitiveType double","text":"<p>an IEEE double precision (64-bit) floating point value</p>"},{"location":"generated/dali/int32/","title":"primitiveType int32","text":"<p>a 32-bit signed integer</p>"},{"location":"generated/dali/int64/","title":"primitiveType int64","text":"<p>a 64-bit signed integer</p>"},{"location":"generated/dali/uuid/","title":"primitiveType uuid","text":"<p>represents a 128-bit binary ID in the canonical ascii UUID format</p>"},{"location":"generated/ivoa/IntegerQuantity/","title":"dataType IntegerQuantity","text":"<p>extends Quantity</p> <p>An integer number with a unit. Examples of such units that can be used for attributes are bit/byte/kiloByte etc.</p> <p>\u00abdataType\u00bbIntegerQuantityivoa:integer value\u00abdataType\u00bbQuantity</p>"},{"location":"generated/ivoa/IntegerQuantity/#members","title":"Members","text":"name type mult description value integer The integer value of this IntegerQuantity."},{"location":"generated/ivoa/Quantity/","title":"abstract dataType Quantity","text":"<p>Meant to represent the value of a numerical physical quantity. Can be mapped in VOTables to FIELDrefs and PARAM(ref)s, in which case the @unit attribute of those VOTable elements is assumed to be mapped to the attribute on the Quantity. Ths is only allowed for these predefined ivoa types.</p> <p>\u00abdataType\u00bbQuantityivoa:Unit unit\u00abdataType\u00bbIntegerQuantity\u00abdataType\u00bbRealQuantity</p>"},{"location":"generated/ivoa/Quantity/#members","title":"Members","text":"name type mult description unit Unit optional The unit of this quantity."},{"location":"generated/ivoa/RealQuantity/","title":"dataType RealQuantity","text":"<p>extends Quantity</p> <p>A real value with a unit.</p> <p>\u00abdataType\u00bbRealQuantityivoa:real value\u00abdataType\u00bbQuantity</p>"},{"location":"generated/ivoa/RealQuantity/#members","title":"Members","text":"name type mult description value real The real value of this quantity"},{"location":"generated/ivoa/Unit/","title":"primitiveType Unit","text":"<p>extends string</p> <p>Must conform to definition of unit in VOUnit spec.</p>"},{"location":"generated/ivoa/anyURI/","title":"primitiveType anyURI","text":"<p>extends string</p> <p>Represents a URI in the same way as the datatype of the same nam in XML Schema is used.</p>"},{"location":"generated/ivoa/boolean/","title":"primitiveType boolean","text":"<p>The standard boolean, having values true or false.</p>"},{"location":"generated/ivoa/complex/","title":"primitiveType complex","text":"<p>Represents a complex number, consisting of a real and imaginary component, both of which are reals. Note that in many contexts there is no native mapping for this type and it must be treated with a custom mapping.</p>"},{"location":"generated/ivoa/datetime/","title":"primitiveType datetime","text":"<p>Represents a moment in time using a date+timestamp.</p>"},{"location":"generated/ivoa/integer/","title":"primitiveType integer","text":"<p>An integer number (from Z).</p>"},{"location":"generated/ivoa/nonnegativeInteger/","title":"primitiveType nonnegativeInteger","text":"<p>An integer number from N, therefore greater than or equal to 0.</p>"},{"location":"generated/ivoa/rational/","title":"primitiveType rational","text":"<p>A rational number from Q, represented by two integers, a numerator and a denominator. A native mapping to a serialisation context does in general not exists.</p>"},{"location":"generated/ivoa/real/","title":"primitiveType real","text":"<p>A real number (from R).</p>"},{"location":"generated/ivoa/string/","title":"primitiveType string","text":"<p>A string, represented as an array of characters treated as a single, primitive value. Ala Java, a string can not be updated, that is any update leads to a different string. However in contrast to Java we assume that two strings that are identical in all their constitutent characters are the same. I.e. string has value type semantics.</p>"},{"location":"generated/javadoc/legal/jquery/","title":"Jquery","text":""},{"location":"generated/javadoc/legal/jquery/#jquery-v371","title":"jQuery v3.7.1","text":""},{"location":"generated/javadoc/legal/jquery/#jquery-license","title":"jQuery License","text":"<pre><code>jQuery v 3.7.1\nCopyright OpenJS Foundation and other contributors, https://openjsf.org/\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</code></pre>"},{"location":"generated/javadoc/legal/jqueryUI/","title":"jqueryUI","text":""},{"location":"generated/javadoc/legal/jqueryUI/#jquery-ui-v1132","title":"jQuery UI v1.13.2","text":""},{"location":"generated/javadoc/legal/jqueryUI/#jquery-ui-license","title":"jQuery UI License","text":"<pre><code>Copyright jQuery Foundation and other contributors, https://jquery.org/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/jquery-ui\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code contained within the demos directory.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above.\n</code></pre>"}]}